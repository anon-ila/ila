# poly_modulus_degree = 8192 * 2
# self.parms.set_coeff_modulus(CoeffModulus.BFVDefault(poly_modulus_degree))
# self.parms.set_plain_modulus(PlainModulus.Batching(poly_modulus_degree, 20))
# Plaintext matrix row size: 8192.0
# Plaintext modulus: 786433
# ==================================
# 
# Coefficient Modulus (q): 1260864178835779834920553696788645403855582773375888727150779106181446108524381258964564013757204357435827521269792769
# 
# Plaintext Modulus   (t): 786433
# 
# Poly  Modulus       (d): 16384
# 
# ==================================
# Type checking ...
# ==================================
# Typecheck error: value out of bounds for the expression: (c8 & c1)
# Returned error code: 6
# ==================================
# 
# Evaluating ILA Program ...
# Final variable values:
# c1: 2 (remaining noise budget: 360)
# c2: 4 (remaining noise budget: 322)
# c3: 8 (remaining noise budget: 283)
# c4: 16 (remaining noise budget: 243)
# c5: 32 (remaining noise budget: 204)
# c6: 64 (remaining noise budget: 165)
# c7: 128 (remaining noise budget: 125)
# c8: 256 (remaining noise budget: 86)
# c9: 512 (remaining noise budget: 47)
# c10: 1024 (remaining noise budget: 7)
# c11: -176486 (remaining noise budget: 0)
# c12: -171638 (remaining noise budget: 0)
# c13: -48570 (remaining noise budget: 0)
# c14: -80605 (remaining noise budget: 0)
# c15: 69565 (remaining noise budget: 0)
# c16: -340640 (remaining noise budget: 0)
# c17: -193553 (remaining noise budget: 0)
# c18: -114112 (remaining noise budget: 0)
# c19: -168958 (remaining noise budget: 0)
# c20: 89897 (remaining noise budget: 0)
# c21: -215769 (remaining noise budget: 0)
# c22: 301327 (remaining noise budget: 0)
# c23: 87459 (remaining noise budget: 0)
# c24: 71180 (remaining noise budget: 0)
#

c1 : cipher <5, -5, 571330318772>;
c2 : cipher <25, -25, 326418333148115114131456>;
c3 : cipher <125, -125, 186492690330537515225108051038044160>;
c4 : cipher <625, -625, 106548928215193877570184993952519480234840424448>;
c5 : cipher <3125, -3125,60874633122001665236075479688946536879191397189789323100160>;
c6 : cipher <15625, -15625, 34779523546721761375751621869938815953325453115584028417219457020067840>;
c7 : cipher <78125, -78125, 19870596274686822724463273069719910243069460128608566879928186329646896740237836288>;
c8 : cipher <390625, -390625, 11352674103806537498402571845778827375955809924931226462196770301771521606358496314679533502464>;
c9 : cipher <1953125, -1953125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c10 : cipher <9765615, -9765615, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c11 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c12 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c13 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c14 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c15 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c16 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c17 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c18 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c19 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c20 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c21 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c22 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c23 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>;
c24 : cipher <78125, -78125, 1621057191970746315858208060221717195388167351513845929226855754321030840320963040256411115570664340959618627433870525800576>




c1 := cinit(2);
c2 := (c1 & c1);
c3 := (c2 & c1);
c4 := (c3 & c1);
c5 := (c4 & c1);
c6 := (c5 & c1);
c7 := (c6 & c1);
c8 := (c7 & c1);
c9 := (c8 & c1);
c10 := (c9 & c1);
c11 := (c10 & c1);
c12 := (c11 & c1);
c13 := (c12 & c1);
c14 := (c13 & c1);
c15 := (c14 & c1);
c16 := (c15 & c1);
c17 := (c16 & c1);
c18 := (c17 & c1);
c19 := (c18 & c1);
c20 := (c19 & c1);
c21 := (c20 & c1);
c22 := (c21 & c1);
c23 := (c22 & c1);
c24 := (c23 & c1)


