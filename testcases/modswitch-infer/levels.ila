# Source code for params:
# ======================
# poly_modulus_degree = 8192*4
# self.parms.set_coeff_modulus(CoeffModulus.Create(poly_modulus_degree, [25, 25, 40, 50, 55, 60, 60]))
# self.parms.set_plain_modulus(PlainModulus.Batching(poly_modulus_degree, 20))
#
# Params
# =======
# Coefficient Modulus (q): 
# Plaintext Modulus   (t): 786433
# Poly  Modulus       (d): 32768
#
# Expected output: fail

c1 : cipher <5, -5, 187474192400>;
c2 : cipher <25, -25, 35146572816032219529216>;
c3 : cipher <125, -125, 6589075354313433988833218926739456>;
c4 : cipher <625, -625, 1235281580712654834447452121803043029223735296>;
c5 : cipher <3125, -3125, 231583416730700375522542478103624884787735340209882005504>



c1 := cpolyinit(x3_2x2_3x1_4);
c2 := modswitch(c1 & c1);
c3 := modswitch(c2 & c2);
c4 := modswitch(c3 & c3);
c5 := (c4 & c4)