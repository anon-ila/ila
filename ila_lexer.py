import lexer

RESERVED = 'RESERVED'
INT      = 'INT'
FLOAT    = 'FLOAT'
ID       = 'ID'
POLY     = 'POLY'

token_exprs = [
    (r'[ \n\t]+',              None),
    (r'#[^\n]*',               None),
    (r'(\-)?[0-9]+(\.[0-9]+)?',  FLOAT),
    (r'\.',                   RESERVED),
    (r'\^',                   RESERVED),
    (r'\"',                   RESERVED),
    (r'\-',                   RESERVED),
    (r'\:=',                   RESERVED),
    (r'\:',                   RESERVED),
    (r'\(',                    RESERVED),
    (r'\)',                    RESERVED),
    (r';',                     RESERVED),
    (r',',                     RESERVED),
    (r'\+',                    RESERVED),
    (r'-',                     RESERVED),
    (r'\$',                     RESERVED),
    (r'vmul',                     RESERVED),
    (r'#',                     RESERVED),
    (r'\*',                    RESERVED),
    (r'\&',                    RESERVED),
    (r'\@',                    RESERVED),
    (r'/',                     RESERVED),
    (r'<=',                    RESERVED),
    (r'<',                     RESERVED),
    (r'>=',                    RESERVED),
    (r'>',                     RESERVED),
    (r'!=',                    RESERVED),
    (r'=',                     RESERVED),
    (r'\[',                     RESERVED),
    (r'\]',                     RESERVED),
    (r'index',                   RESERVED),
    (r'and',                   RESERVED),
    (r'or',                    RESERVED),
    (r'not',                   RESERVED),
    (r'if',                    RESERVED),
    (r'then',                  RESERVED),
    (r'else',                  RESERVED),
    (r'while',                 RESERVED),
    (r'do',                    RESERVED),
    (r'end',                   RESERVED),
    (r'startdecl',                  RESERVED),
    (r'vec',                  RESERVED),
    (r'minit',                  RESERVED),
    (r'matrix',                  RESERVED),
    (r'cipher',                  RESERVED),
    (r'float',                  RESERVED),
    (r'plain',                  RESERVED),
    (r'cpolyinit',                  RESERVED),
    (r'cinit',                  RESERVED),
    (r'pinit',                  RESERVED),
    (r'vinit',                  RESERVED),
    (r'modswitch',                  RESERVED),
    (r'envinit',                  RESERVED),
    (r'int',                  RESERVED),
    (r'[0-9]+',                INT),
    (r'[A-Za-z][A-Za-z0-9_]*', ID),
    (r'x\^[0-9]', POLY),
]

def ila_lex(characters):
    return lexer.lex(characters, token_exprs)
